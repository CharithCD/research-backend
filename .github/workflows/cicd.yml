name: build-and-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/research-backend:main
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/research-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/research-backend:buildcache,mode=max

  # NEW: copy the Caddyfile (and anything else from repo you want) to the droplet
  upload-configs:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Upload Caddyfile to droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "Caddyfile"
          target: "/opt/research-backend"
          strip_components: 0

  deploy:
    needs: upload-configs
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            set -Eeuo pipefail
            mkdir -p /opt/research-backend
            cd /opt/research-backend

            docker --version
            docker compose version

            # Write/replace docker-compose.yml (references ./Caddyfile that we uploaded)
            cat > docker-compose.yml <<-'YAML'
            services:
              api:
                image: ${DOCKERHUB_USERNAME}/research-backend:main
                container_name: research_backend_api
                env_file:
                  - .env.prod
                restart: unless-stopped
                environment:
                  HF_HOME: /root/.cache/huggingface
                  NLTK_DATA: /root/nltk_data
                volumes:
                  - hf_cache:/root/.cache/huggingface
                  - data:/app/data
                command: ["sh","-lc","/app/bootstrap_model.sh && exec uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1"]

              caddy:
                image: caddy:2-alpine
                container_name: research_backend_caddy
                restart: unless-stopped
                depends_on:
                  - api
                ports:
                  - "80:80"
                  # - "443:443"  # enable later when you add TLS
                volumes:
                  - ./Caddyfile:/etc/caddy/Caddyfile:ro
                  - caddy-data:/data
                  - caddy-config:/config
                command: ["caddy","run","--config","/etc/caddy/Caddyfile","--adapter","caddyfile"]

            volumes:
              hf_cache:
              data:
              caddy-data:
              caddy-config:
            YAML

            # Keep DOCKERHUB_USERNAME available for compose substitution
            grep -q '^DOCKERHUB_USERNAME=' .env.prod 2>/dev/null || \
              echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env.prod

            # Ensure .env.prod exists (edit on server if needed)
            if [ ! -f .env.prod ]; then
              echo "ERROR: .env.prod is missing on server (/opt/research-backend)."
              exit 1
            fi

            # Bring it up
            docker compose pull
            docker compose up -d
            docker compose ps
